<?xml version="1.0"?>
<launch>
    <!-- world configs -->
    <env name="GAZEBO_MODEL_PATH" value="$(find angelshark_sim)/models:${GAZEBO_MODEL_PATH}"/>
    <env name="GAZEBO_RESOURCE_PATH" value="$(find angelshark_sim)/citysim_files:${GAZEBO_RESOURCE_PATH}"/>
    <env name="GAZEBO_PLUGIN_PATH" value="$(find angelshark_sim)/citysim_files/plugins:${GAZEBO_PLUGIN_PATH}"/>

    <arg name="name_of_world" default="empty"/>
    <arg name="world" default="$(find angelshark_sim)/worlds/$(arg name_of_world).world"/>
    <arg name="gui" default="true"/>
    <arg name="verbose" default="true"/>
    
    <arg name="rvizconfig" default="$(find angelshark_sim)/rviz/angelshark.rviz" />
    
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <arg name="controller" default="false"/>
    <arg name="controller_type" default="joy"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="verbose" value="true"/>
        <arg name="world_name" value="$(arg world)"/>
    </include>

    <node pkg="tf2_ros" type="static_transform_publisher" name="very_inaccurate_odom" args="0 0 0 0 0 0 odom pars__base_link"/>
    
    <param name="robot_description" textfile="$(find angelshark_sim)/urdf/angelshark.urdf" />
 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model angelshark -param robot_description -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>
    <!-- load the controllers -->
    <rosparam file="$(find angelshark_sim)/config/angelshark_control.yaml" command="load"/>
    <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" ns="/angelshark" args="left_rear_wheel_velocity_controller left_steering_hinge_position_controller
                                               right_steering_hinge_position_controller joint_state_controller"/>
                                              <!--left_front_wheel_velocity_controller right_front_wheel_velocity_controller
                                              right_rear_wheel_velocity_controller "/>-->
    
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/angelshark/joint_states" />
    </node>
    
    <node pkg="angelshark_sim" type="servo_commands.py" name="servo_commands" output="screen" />
    
    <!-- Allow for Gazebo to broadcast odom -->
    <node pkg="angelshark_sim" name="gazebo_odometry_node" type="gazebo_odometry.py"/>
    
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="false" />
    
    <include if="$(eval arg('controller') and arg('controller_type') == 'keyboard')" file="$(find angelshark_sim)/launch/include/keyboard_drive.launch.xml" />
    <include if="$(eval arg('controller') and arg('controller_type') == 'joy')" file="$(find angelshark_sim)/launch/include/joy_drive.launch.xml" />
</launch>
