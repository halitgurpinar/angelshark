<?xml version="1.0"?>
<launch>
    <!-- world configs -->
    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find angelshark_sim)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find angelshark_sim)/models"/>

    <arg name="world" default="$(find angelshark_sim)/worlds/empty.world"/>
    <arg name="joy_dev" default="/dev/input/js0" />
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <arg name="yaw" default="-0,628294"/>
    <!--   <arg name="rvizconfig" default="$(find car_demo)/rviz/demo.rviz" /> -->

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="verbose" value="true"/>
        <arg name="world_name" value="$(arg world)"/>
    </include>

    <!--<node pkg="tf2_ros" type="static_transform_publisher" name="very_inaccurate_odom" args="0 0 0 0 0 0 odom base_link"/>-->

    <param name="robot_description" textfile="$(find angelshark_sim)/urdf/pars.urdf" />
 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model pars -param robot_description -x $(arg x) -y $(arg y) -z $(arg z)"/>
    <!-- load the controllers -->
    <rosparam file="$(find angelshark_sim)/config/pars_control.yaml" command="load"/>
    <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" ns="/pars" args="left_rear_wheel_velocity_controller left_steering_hinge_position_controller
                                               right_steering_hinge_position_controller joint_state_controller"/>
                                              <!--left_front_wheel_velocity_controller right_front_wheel_velocity_controller
                                              right_rear_wheel_velocity_controller "/>-->
    
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/pars/joint_states" />
    </node>
    
    <node pkg="angelshark_sim" type="servo_commands.py" name="servo_commands" output="screen" />
    
</launch>
